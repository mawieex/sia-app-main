version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: gabaylakbay-mongo-prod
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: gabaylakbay
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: gabaylakbay-backend-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://mongo:27017/
      - PYTHONUNBUFFERED=1
      - CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
    depends_on:
      - mongo
    networks:
      - app-network
    volumes:
      - model_cache:/root/.cache/huggingface
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # React Frontend
  frontend:
    build:
      context: ./transportation-system-demo
      dockerfile: Dockerfile
    container_name: gabaylakbay-frontend-prod
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: gabaylakbay-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # Mount SSL certificates here
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  mongo_data:
    driver: local
  model_cache:
    driver: local

networks:
  app-network:
    driver: bridge
